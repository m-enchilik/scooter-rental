{
	"info": {
		"_postman_id": "50ff717d-2d24-4b4e-a06f-a127495f69fd",
		"name": "scooter",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43343885",
		"_collection_link": "https://maxx33.postman.co/workspace/Book-warehouse~fc430ba4-d407-4731-a4d8-2b7cff350e33/collection/43343885-50ff717d-2d24-4b4e-a06f-a127495f69fd?action=share&source=collection_link&creator=43343885"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "login-пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "правка роли пользователя пользователем - ОШИБКА",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(403);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"roles\": [\"ADMIN\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/-3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-администратор",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление пользователя администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(201);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var createdUserId = jsonData.id;\r",
									"pm.collectionVariables.set('createdUserId', createdUserId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"uuid = require('uuid')\r",
									"var username='user-' + uuid.v4()\r",
									"console.log(username)\r",
									"pm.collectionVariables.set('userToRegister', username)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"{{userToRegister}}\",\r\n    \"password\":\"password\",\r\n    \"firstName\":\"first-nyam\",\r\n    \"lastName\":\"last-nyam\",\r\n    \"email\":\"nyam@nyam.su\",\r\n    \"phoneNumber\":\"0123456789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос добавленного пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/users/{{createdUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"{{createdUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update пользователя админом - УСПЕШНО",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"tneilC\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/{{createdUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"{{createdUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление пользователя администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"No Content\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"uuid = require('uuid')\r",
									"var username='user-' + uuid.v4()\r",
									"console.log(username)\r",
									"pm.collectionVariables.set('userToRegister', username)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/users/{{createdUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"{{createdUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалился?",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(404);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/users/{{createdUserId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"{{createdUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос пользователей списком",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "scooters",
			"item": [
				{
					"name": "login-пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление скутера пользователем - ОШИБКА",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(403);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"model\": \"InfinityFX80\",\r\n    \"serialNumber\": \"1234567890\",\r\n    \"status\": \"AVAILABLE\",\r\n    \"chargeLevel\": \"99\",\r\n    \"mileage\": \"0.99\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-администратор",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление скутера администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(201);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var createdScooterId = jsonData.id;\r",
									"pm.collectionVariables.set('createdScooterId', createdScooterId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"model\": \"InfinityFX35\",\r\n    \"serialNumber\": \"1234567899\",\r\n    \"status\": \"AVAILABLE\",\r\n    \"chargeLevel\": \"99\",\r\n    \"mileage\": \"0.99\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос добавленного скутера",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters/{{createdScooterId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters",
								"{{createdScooterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update скутера админом - УСПЕШНО",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"chargeLevel\": 50,\r\n    \"rentalPointId\": -2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters/{{createdScooterId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters",
								"{{createdScooterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление скутера администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"No Content\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters/{{createdScooterId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters",
								"{{createdScooterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалился?",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(404);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters/{{createdScooterId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters",
								"{{createdScooterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос скутеров списком",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "rental points",
			"item": [
				{
					"name": "login-пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление точки проката пользователем - ОШИБКА",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(403);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Детский мир\",\r\n    \"address\": \"Ленина, 75/33\",\r\n    \"latitude\": 54.513783,\r\n    \"longitude\": 36.264396\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-администратор",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление точки проката администратором- OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(201);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var createdRentalPointId = jsonData.id;\r",
									"pm.collectionVariables.set('createdRentalPointId', createdRentalPointId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Детский мир\",\r\n    \"address\": \"Ленина, 75/33\",\r\n    \"latitude\": 54.513783,\r\n    \"longitude\": 36.264396\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос добавленной точки проката",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points/{{createdRentalPointId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points",
								"{{createdRentalPointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update точки проката админом - УСПЕШНО",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Дом Быта\",\r\n    \"address\": \"Кирова, 27\",\r\n    \"latitude\": 54.514254,\r\n    \"longitude\": 36.261882\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points/{{createdRentalPointId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points",
								"{{createdRentalPointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление точки аренды администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"No Content\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points/{{createdRentalPointId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points",
								"{{createdRentalPointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалился?",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Deleted, NOT FOUND\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(404);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points/{{createdRentalPointId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points",
								"{{createdRentalPointId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос точек аренды списком",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rental-points",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rental-points"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tariffs",
			"item": [
				{
					"name": "login-пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление тарифа пользователем - ОШИБКА",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(403);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Базовый\",\r\n    \"description\": \"1 минута 10 рублей\",\r\n    \"subscriptionPrice\": \"10\",\r\n    \"isSubscription\" : \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-администратор",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление тарифа администратором- OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(201);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var createdTariffId = jsonData.id;\r",
									"pm.collectionVariables.set('createdTariffId', createdTariffId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"BASIC\",\r\n    \"name\": \"Базовый\",\r\n    \"description\": \"1 минута 10 рублей\",\r\n    \"subscriptionPrice\": \"10\",\r\n    \"isSubscription\" : \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос добавленного тарифа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs/{{createdTariffId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs",
								"{{createdTariffId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update тарифа админом - УСПЕШНО",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"1 минута 15 рублей\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs/{{createdTariffId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs",
								"{{createdTariffId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление тарифа администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"No Content\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs/{{createdTariffId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs",
								"{{createdTariffId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалился?",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(404);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs/{{createdTariffId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs",
								"{{createdTariffId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос тарифов списком",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "rentals",
			"item": [
				{
					"name": "login-администратор",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "добавление аренды администратором- OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(201);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var createdRentalId = jsonData.id;\r",
									"if (createdRentalId) {\r",
									"    pm.collectionVariables.set('createdRentalId', createdRentalId)\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"-1\",\r\n    \"scooterId\": \"-1\",\r\n    \"startTime\": \"2025-01-20T11:30:00\",\r\n    \"endTime\": \"2025-01-20T12:40:00\",\r\n    \"startMileage\": \"100.2\",\r\n    \"endMileage\": \"110.8\",\r\n    \"totalCost\": \"345.6\",\r\n    \"subscriptionId\": \"-1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос добавленной аренды",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/{{createdRentalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"{{createdRentalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update аренды админом - УСПЕШНО",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"totalCost\": \"355.6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/{{createdRentalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"{{createdRentalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "удаление аренды администратором - УСПЕШНО",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"No Content\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/{{createdRentalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"{{createdRentalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалился?",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(404);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/{{createdRentalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"{{createdRentalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос истории аренды",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос своей истории аренды (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/my",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"my"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос своей истории аренды (user2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/my",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"my"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Business",
			"item": [
				{
					"name": "новый пользователь",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"uuid = require('uuid')\r",
									"var username='user-' + uuid.v4()\r",
									"console.log(username)\r",
									"pm.collectionVariables.set('userToRegister', username)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(201);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "userName",
									"value": "{{userToRegister}}",
									"description": "Операция НЕ ИДЕМПОТЕНТНА. имя пользователя каждый раз генерируется новое (для целей тестирования) ",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								},
								{
									"key": "firstName",
									"value": "first-nyam",
									"type": "text"
								},
								{
									"key": "lastName",
									"value": "last-nyam",
									"type": "text"
								},
								{
									"key": "email",
									"value": "nyam@nyam.su",
									"type": "text"
								},
								{
									"key": "phoneNumber",
									"value": "0123456789",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/users/self-register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"self-register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"{{userToRegister}}\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "положить денежные средства на счёт",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "amount",
									"value": "100500.11",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/users/deposit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Подписки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var firstSubscriptionId = jsonData[0].id\r",
									"\r",
									"pm.collectionVariables.set('firstSubscriptionId', firstSubscriptionId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/subscriptions/active",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"subscriptions",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Самокаты",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var firstScooterId = jsonData[0].id\r",
									"\r",
									"pm.collectionVariables.set('firstScooterId', firstScooterId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/scooters/rental-point/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"scooters",
								"rental-point",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аренда по первому тарифу",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var currentRentalId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('currentRentalId', currentRentalId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "scooterId",
									"value": "{{firstScooterId}}",
									"type": "text"
								},
								{
									"key": "subscriptionId",
									"value": "{{firstSubscriptionId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Завершение",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var currentRentalId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('currentRentalId', currentRentalId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "rentalId",
									"value": "{{currentRentalId}}",
									"type": "text"
								},
								{
									"key": "pointId",
									"value": "-3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/end",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"end"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос тарифов списком",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs"
							]
						}
					},
					"response": []
				},
				{
					"name": "купить тариф на неделю",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var addedSubscriptionId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('addedSubscriptionId', addedSubscriptionId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs/buy/-5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs",
								"buy",
								"-5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аренда по тарифу на неделю",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var currentRentalId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('currentRentalId', currentRentalId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "scooterId",
									"value": "{{firstScooterId}}",
									"type": "text"
								},
								{
									"key": "subscriptionId",
									"value": "{{addedSubscriptionId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Завершение",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var currentRentalId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('currentRentalId', currentRentalId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "rentalId",
									"value": "{{currentRentalId}}",
									"type": "text"
								},
								{
									"key": "pointId",
									"value": "-3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/end",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"end"
							]
						}
					},
					"response": []
				},
				{
					"name": "купить тариф на 2 часа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"var addedSubscriptionId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('addedSubscriptionId', addedSubscriptionId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tariffs/buy/-3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tariffs",
								"buy",
								"-3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Аренда по тарифу на 2 часа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var currentRentalId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('currentRentalId', currentRentalId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "scooterId",
									"value": "{{firstScooterId}}",
									"type": "text"
								},
								{
									"key": "subscriptionId",
									"value": "{{addedSubscriptionId}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Завершение",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"var jsonData = pm.response.json()\r",
									"var currentRentalId = jsonData.id\r",
									"\r",
									"pm.collectionVariables.set('currentRentalId', currentRentalId)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "rentalId",
									"value": "{{currentRentalId}}",
									"type": "text"
								},
								{
									"key": "pointId",
									"value": "-3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/end",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"end"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос юзером информации по самокату",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Forbidden\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(403);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/scooter/{{firstScooterId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"scooter",
								"{{firstScooterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "login-администратор",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTTP 200\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")\r",
									"\r",
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\r",
									"    \"Has access token\",\r",
									"    () => {\r",
									"        var accessToken = jsonData.accessToken\r",
									"        pm.expect(accessToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('accessToken', accessToken)\r",
									"    }\r",
									")\r",
									"\r",
									"pm.test(\r",
									"    \"Has refresh token\",\r",
									"    () => {\r",
									"        var refreshToken = jsonData.refreshToken\r",
									"        pm.expect(refreshToken).to.be.a(\"string\")\r",
									"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
									"    }\r",
									")\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "запрос админом информации по самокату Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Ok\",\r",
									"    () => {\r",
									"        pm.response.to.have.status(200);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/rentals/scooter/{{firstScooterId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rentals",
								"scooter",
								"{{firstScooterId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Checklist",
			"item": [
				{
					"name": "1 Регистрация пользователей в системе (менеджеры и обычные пользователи)",
					"item": [
						{
							"name": "login-пользователь Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"HTTP 200\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")\r",
											"\r",
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\r",
											"    \"Has access token\",\r",
											"    () => {\r",
											"        var accessToken = jsonData.accessToken\r",
											"        pm.expect(accessToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('accessToken', accessToken)\r",
											"    }\r",
											")\r",
											"\r",
											"pm.test(\r",
											"    \"Has refresh token\",\r",
											"    () => {\r",
											"        var refreshToken = jsonData.refreshToken\r",
											"        pm.expect(refreshToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
											"    }\r",
											")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "правка роли пользователя пользователем - ОШИБКА Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Forbidden\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(403);\r",
											"    }\r",
											")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roles\": [\"ADMIN\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/-3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"-3"
									]
								}
							},
							"response": []
						},
						{
							"name": "правка роли пользователя пользователем - ОШИБКА Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Forbidden\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(403);\r",
											"    }\r",
											")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roles\": [\"ADMIN\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/-3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"-3"
									]
								}
							},
							"response": []
						},
						{
							"name": "login-администратор Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"HTTP 200\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")\r",
											"\r",
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\r",
											"    \"Has access token\",\r",
											"    () => {\r",
											"        var accessToken = jsonData.accessToken\r",
											"        pm.expect(accessToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('accessToken', accessToken)\r",
											"    }\r",
											")\r",
											"\r",
											"pm.test(\r",
											"    \"Has refresh token\",\r",
											"    () => {\r",
											"        var refreshToken = jsonData.refreshToken\r",
											"        pm.expect(refreshToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
											"    }\r",
											")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "добавление пользователя администратором - УСПЕШНО Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Forbidden\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(201);\r",
											"    }\r",
											")\r",
											"\r",
											"var jsonData = pm.response.json()\r",
											"var createdUserId = jsonData.id;\r",
											"pm.collectionVariables.set('createdUserId', createdUserId)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"uuid = require('uuid')\r",
											"var username='user-' + uuid.v4()\r",
											"console.log(username)\r",
											"pm.collectionVariables.set('userToRegister', username)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"roles\": [\"ADMIN\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2 Редактирование личной информации  пользователя",
					"item": []
				},
				{
					"name": "3 Иерархический список точек проката с географической привязкой",
					"item": [
						{
							"name": "login-администратор",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"HTTP 200\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")\r",
											"\r",
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\r",
											"    \"Has access token\",\r",
											"    () => {\r",
											"        var accessToken = jsonData.accessToken\r",
											"        pm.expect(accessToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('accessToken', accessToken)\r",
											"    }\r",
											")\r",
											"\r",
											"pm.test(\r",
											"    \"Has refresh token\",\r",
											"    () => {\r",
											"        var refreshToken = jsonData.refreshToken\r",
											"        pm.expect(refreshToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
											"    }\r",
											")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "добавление точки проката администратором- OK Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Forbidden\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(201);\r",
											"    }\r",
											")\r",
											"\r",
											"var jsonData = pm.response.json()\r",
											"var createdRentalPointId = jsonData.id;\r",
											"pm.collectionVariables.set('createdRentalPointId', createdRentalPointId)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Детский мир\",\r\n    \"address\": \"Ленина, 75/33\",\r\n    \"latitude\": 54.513783,\r\n    \"longitude\": 36.264396\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/rental-points",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"rental-points"
									]
								}
							},
							"response": []
						},
						{
							"name": "запрос добавленной точки проката Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Ok\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080/api/rental-points",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"rental-points"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4 Возможность добавления / удаления / редактирования самокатов и точек проката",
					"item": []
				},
				{
					"name": "5 Просмотр детальной информации о точке проката (наличие самокатов, т.е. количество и модельный ряд, их состояние)",
					"item": [
						{
							"name": "Запрос на точку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Ok\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080/api/scooters/rental-point/-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"scooters",
										"rental-point",
										"-1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "6 Тарификация использования самокатов (почасовая, абонементная, возможность назначить цену и/или скидку).",
					"item": []
				},
				{
					"name": "7 Возможность аренды самоката пользователем по часовому тарифу либо на абонементной основе",
					"item": []
				},
				{
					"name": "8 Просмотр истории аренды конкретного самоката администратором (кто, когда, пробег и т.д.)",
					"item": []
				},
				{
					"name": "9 История аренды для клиента",
					"item": [
						{
							"name": "login-пользователь",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"HTTP 200\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")\r",
											"\r",
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\r",
											"    \"Has access token\",\r",
											"    () => {\r",
											"        var accessToken = jsonData.accessToken\r",
											"        pm.expect(accessToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('accessToken', accessToken)\r",
											"    }\r",
											")\r",
											"\r",
											"pm.test(\r",
											"    \"Has refresh token\",\r",
											"    () => {\r",
											"        var refreshToken = jsonData.refreshToken\r",
											"        pm.expect(refreshToken).to.be.a(\"string\")\r",
											"        pm.collectionVariables.set('refreshToken', refreshToken)\r",
											"    }\r",
											")\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"user2\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "запрос своей истории аренды (user2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Ok\",\r",
											"    () => {\r",
											"        pm.response.to.have.status(200);\r",
											"    }\r",
											")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8080/api/rentals/my",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"rentals",
										"my"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "userToRegister",
			"value": ""
		},
		{
			"key": "createdUserId",
			"value": ""
		},
		{
			"key": "createdScooterId",
			"value": ""
		},
		{
			"key": "createdRentalPointId",
			"value": ""
		},
		{
			"key": "createdTariffId",
			"value": ""
		},
		{
			"key": "createdRentalId",
			"value": ""
		},
		{
			"key": "firstSubscriptionId",
			"value": ""
		},
		{
			"key": "firstScooterId",
			"value": ""
		},
		{
			"key": "currentRentalId",
			"value": "",
			"type": "string"
		},
		{
			"key": "addedSubscriptionId",
			"value": ""
		}
	]
}